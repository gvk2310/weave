#below are global variables declared in the same way for most of the tools

global:
  dns:
    enabled: "true"
  image:
    repository: ""
  tls:
    secret: ""
  ingress:
    host: ""  #If dns.enabled is true mention dns here
  storageClass: "ebs"
  authentication:
    adminPassword: ""
  keycloakSettings:
    enabled: false
    keycloakClientId: ""
    keycloakClientSecret: ""
    keycloakRealm: ""


deployment:
  # Annotations to add to deployment
  annotations:
    cloud.weave.works/launcher-info: |-
          {
            "original-request": {
              "url": "/k8s/scope.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxMiIsIEdpdFZlcnNpb246InYxLjEyLjIiLCBHaXRDb21taXQ6IjE3Yzc3Yzc4OTgyMTgwNzNmMTRjOGQ1NzM1ODJlOGQyMzEzZGM3NDAiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE4LTEwLTI0VDA2OjU0OjU5WiIsIEdvVmVyc2lvbjoiZ28xLjEwLjQiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjEwIiwgR2l0VmVyc2lvbjoidjEuMTAuNiIsIEdpdENvbW1pdDoiYTIxZmRiZDc4ZGRlOGY1NDQ3ZjVmNmMzMzFmN2ViNmY4MGJkNjg0ZSIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMTgtMDctMjZUMTA6MDQ6MDhaIiwgR29WZXJzaW9uOiJnbzEuOS4zIiwgQ29tcGlsZXI6ImdjIiwgUGxhdGZvcm06ImxpbnV4L2FtZDY0In0K",
              "date": "Tue Nov 06 2018 03:59:13 GMT+0000 (UTC)"
            },
            "email-address": "support@weave.works"
          }

  replicaCount: 1
  revisionHistoryLimit: 2
  minReadySeconds: 5
  names:
    name: weave-scope-app
    app: weave-scope
    weave-cloud-component: scope
    weave-scope-component: app
#Enable:True to use statefulset
#REMOVE deployment.yaml and pvc.yaml FROM templates/ DIRECTORY, IF YOU ARE ENABLING statefulset
daemonSet:
  # Annotations to add to deployment
  annotations:
    cloud.weave.works/launcher-info: |-
          {
            "original-request": {
              "url": "/k8s/scope.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxMiIsIEdpdFZlcnNpb246InYxLjEyLjIiLCBHaXRDb21taXQ6IjE3Yzc3Yzc4OTgyMTgwNzNmMTRjOGQ1NzM1ODJlOGQyMzEzZGM3NDAiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE4LTEwLTI0VDA2OjU0OjU5WiIsIEdvVmVyc2lvbjoiZ28xLjEwLjQiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjEwIiwgR2l0VmVyc2lvbjoidjEuMTAuNiIsIEdpdENvbW1pdDoiYTIxZmRiZDc4ZGRlOGY1NDQ3ZjVmNmMzMzFmN2ViNmY4MGJkNjg0ZSIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMTgtMDctMjZUMTA6MDQ6MDhaIiwgR29WZXJzaW9uOiJnbzEuOS4zIiwgQ29tcGlsZXI6ImdjIiwgUGxhdGZvcm06ImxpbnV4L2FtZDY0In0K",
              "date": "Tue Nov 06 2018 03:59:13 GMT+0000 (UTC)"
            },
            "email-address": "support@weave.works"
          }

  replicaCount: 1
  revisionHistoryLimit: 2
  minReadySeconds: 5
  names:
    name: weave-scope-agent
    app: weave-scope
    weave-cloud-component: scope
    weave-scope-component: app
statefulset:
  enabled: false #Must enable persistence below in PVC Fields section
  annotations: {}
  replicaCount: 1

image:
  registry: docker.io/weaveworks/scope:1.9.1
  repository: production/
  name: weavescopeapp
  tag: 1.9.1
  pullPolicy: IfNotPresent
 # Overrides the image tag whose default is the chart appVersion.

imagePullSecrets:
- name: regcred
nameOverride: ""
fullnameOverride: ""

##########PVC Fields################

defaultstorageClass: "ebs"

persistence:
  enabled: false
  # Annotations to add to pvc
  annotations: {}
  name: myvolume1-pvc
  size: 10Gi
  accessModes: ReadWriteOnce

customPersistence:
  enabled: false
  name: myvolume1-pvc2
  # Annotations to add to pvc
  annotations: {}
customPersistencefields:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 12Gi

##########Init-Containers fields##############

initcontainers:
  enabled: false
initcontainersfields:
  - name: init-myservice
    image: busybox:1.28
    command: ['sh', '-c', 'echo Hello Worldi && ns lookup sonar 5432']
  - name: init-myservice2
    image: busybox:1.28
    command: ['sh', '-c', 'echo Hello World']

##########Container ENV Values derived from Configmaps and secrets#############


#Include Pod fields as ENV Values using Downward API
customPodEnv:
  enabled: false

customPodEnvFields:
  - name: MY_POD_IP
    valueFrom:
      fieldRef:
        fieldPath: status.podIP
  - name: MY_CPU_REQUEST
    valueFrom:
      resourceFieldRef:
        containerName: test-container
        resource: requests.cpu
  - name: MY_CPU_LIMIT
    valueFrom:
      resourceFieldRef:
        containerName: test-container
        resource: limits.cpu


extraEnv:
  enabled: false
extraEnvFields:
  - envName: LDAP_ENABLED
    envValue: "true"
  - envName: KEYCLOAK_ENABLED
    envValue: "false"

configmapEnvKey:
  enabled: false
configmapEnvKeyField:
  - configMapName: configmap-name1
    envKeyName: KEY1_NAME
    envkey: KEY1
  - configMapName: configmap-name2
    envKeyName: KEY2_NAME
    envkey: KEY2

configmapEnvFrom:
  enabled: false
configmapEnvFromField:
  - configMapName: jenkins-env1
  - configMapName: jenkins-env2

secretEnvKey:
  enabled: false
secretEnvKeyField:
  - secretName: secret-name1
    envKeyName: KEY1_NAME
    envkey: KEY1
  - secretName: secret-name2
    envKeyName: KEY2_NAME
    envkey: KEY2

secretEnvFrom:
  enabled: false
secretEnvFromField:
  - secretName: jenkins-secret-env1
  - secretName: jenkins-secret-env2

############Pod Volumes and Volume Mounts Section##############

customVolumeMounts:
  enabled: true
  volumeMountFields:
    - name: scope-plugins
      mountPath: /var/run/scope/plugins
    - name: sys-kernel-debug
      mountPath: /sys/kernel/debug
    - name: docker-socket
      mountPath: /var/run/docker.sock


customVolumes:
  enabled: true
  customVolumeClaimNames:
   - name: scope-plugins  #Must Match volumemounts name mentioned above in customVolumeMounts section
     hostPath:
      path: /var/run/scope/plugins
   - name: sys-kernel-debug
     hostPath:
      path: /sys/kernel/debug
   - name: docker-socket
     hostPath:
      path: /var/run/docker.sock
configmapMounts:
  enabled: false
  configNames:
    - name: myconfigmapvol #Must Match volumemounts name mentioned above in customVolumeMounts section
      configMap:
        name: myconfigmapvol-pvc

secretMounts:
  enabled: false
  secretNames:
    - name: mysecretvol  #Must Match volumemounts name mentioned above in customVolumeMounts section
      secret:
        secretName: mysecretvol-pvc


#############Generic Container Values############

Ports:
  - containerPort: 4040
    protocol: TCP


containerSecurityContext:
  enabled: true
containerSecurityContextFields:
  privileged: true

#############Generic Pod Values###################

command:
  enabled: true
  cmd : '["/home/weave/scope"]'

arguments:
  enabled: true
  args: '["--mode=app"]'
  args1: '["--mode=probe", "--probe-only", "--probe.kubernetes=true", "--probe.no-controls=true", "--probe.docker.bridge=docker0", "--probe.docker=true", "weave-scope-app.weave.svc.cluster.local:80"]'

podSecurityContext:
  enabled: true
  privileged: true

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 10079m
    memory: 12908Mi
  requests:
    cpu: 10092902m
    memory: 1288213Mi

Probes:
  enable: false

podAnnotations: {}

nodeSelector: {}

tolerations:
  - effect: NoSchedule
    operator: Exists

affinity: {}

###########Secret File Values###############
secret:
  create: false
  # The name of the secret to use.
  # If not set and create is true, a name is generated using the fullname template
  name: myvolume3-secret
  # Annotations to add to the secret
  annotations: {}
  type: Opaque
  # datatype:- this field can have only two values stringData or data
  datatype: stringData
  # if <datatype: data> then secret file contents must be base64 encode

  secretFromValues:
    enabled: false
  secretContents:
    username: admin
    password: admin123
    uname: test1
    pwd: test123

  secretFromFile:
    enabled: false

###########Configmap File Values###############

configmap:
  create: false
  # The name of the configmap to use.
  # If not set and create is true, a name is generated using the fullname template
  name: myvolume2-configmap
  setImmutable: false
  # Annotations to add to the configmap
  annotations: {}
  configmapFromValues:
    enabled: false
  configmapContents:
    test.name: hello-test
    log_level: INFO
    date: 10-12-2021

  configmapFromFile:
    enabled: false


#############RBAC Values###################

#If enabled deployment will pick the serviceAccount name mentioned below that is already created in the cluster
customServiceAccount:
  enabled: true
  name: weave-scope

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations:
     cloud.weave.works/launcher-info: |-
          {
            "original-request": {
              "url": "/k8s/scope.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxMiIsIEdpdFZlcnNpb246InYxLjEyLjIiLCBHaXRDb21taXQ6IjE3Yzc3Yzc4OTgyMTgwNzNmMTRjOGQ1NzM1ODJlOGQyMzEzZGM3NDAiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE4LTEwLTI0VDA2OjU0OjU5WiIsIEdvVmVyc2lvbjoiZ28xLjEwLjQiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjEwIiwgR2l0VmVyc2lvbjoidjEuMTAuNiIsIEdpdENvbW1pdDoiYTIxZmRiZDc4ZGRlOGY1NDQ3ZjVmNmMzMzFmN2ViNmY4MGJkNjg0ZSIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMTgtMDctMjZUMTA6MDQ6MDhaIiwgR29WZXJzaW9uOiJnbzEuOS4zIiwgQ29tcGlsZXI6ImdjIiwgUGxhdGZvcm06ImxpbnV4L2FtZDY0In0K",
              "date": "Tue Nov 06 2018 03:59:13 GMT+0000 (UTC)"
            },
            "email-address": "support@weave.works"
          }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: weave-scope

#A role will is a namespace-scoped object i.e it can only access objects present inside a particular namespace
role:
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: test-role
  # Annotations to add to the role
  annotations: {}

  #Both Role and Rolebinding should be present in the same namespace
  rules:
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create","delete","get","list","patch","update","watch"]
  - apiGroups: [""]
    resources: ["pods/log"]
    verbs: ["get","list","watch"]
  - apiGroups: [""]
    resources: ["pods/attach"]
    verbs: ["create","delete","get","list","patch","update","watch"]

rolebinding:
  create: true
  # Annotations to add to the rolebinding
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: test-rolebinding

  #Values defined by this API group are "User", "Group", and "ServiceAccount" only.

  #kind: User
  #userName: test-user

  #kind: Group
  #groupName: test-group

  kind: ServiceAccount
  serviceAccountName: weave-scope


#clusterRole is cluster-scoped object i.e it can access cluster-scoped resources (like nodes) and namespaced resources (like Pods), across all namespaces
clusterRole:
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: weave-scope
  # Annotations to add to the clusterrole
  annotations:
        cloud.weave.works/launcher-info: |-
          {
            "original-request": {
              "url": "/k8s/scope.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxMiIsIEdpdFZlcnNpb246InYxLjEyLjIiLCBHaXRDb21taXQ6IjE3Yzc3Yzc4OTgyMTgwNzNmMTRjOGQ1NzM1ODJlOGQyMzEzZGM3NDAiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE4LTEwLTI0VDA2OjU0OjU5WiIsIEdvVmVyc2lvbjoiZ28xLjEwLjQiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjEwIiwgR2l0VmVyc2lvbjoidjEuMTAuNiIsIEdpdENvbW1pdDoiYTIxZmRiZDc4ZGRlOGY1NDQ3ZjVmNmMzMzFmN2ViNmY4MGJkNjg0ZSIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMTgtMDctMjZUMTA6MDQ6MDhaIiwgR29WZXJzaW9uOiJnbzEuOS4zIiwgQ29tcGlsZXI6ImdjIiwgUGxhdGZvcm06ImxpbnV4L2FtZDY0In0K",
              "date": "Tue Nov 06 2018 03:59:13 GMT+0000 (UTC)"
            },
            "email-address": "support@weave.works"
          }

  rules:
   - apiGroups: [""]
     resources: ["pods"]
     verbs: ["get", "list", "watch"]
   - apiGroups: [""]
     resources: ["pods/log", "services", "nodes", "namespaces", "persistentvolumes", "persistentvolumeclaims"]
     verbs: ["get", "list", "watch"]
   - apiGroups: ["apps"]
     resources: ["statefulsets"]
     verbs: ["get", "list", "watch"]
   - apiGroups: ["batch"]
     resources: ["cronjobs", "jobs"]
     verbs: ["get", "list", "watch"]
   - apiGroups: ["extensions"]
     resources: ["deployments", "daemonsets"]
     verbs: ["get", "list", "watch"]
   - apiGroups: ["extensions"]
     resources: ["deployments/scale"]
     verbs: ["get", "list", "watch"]
   - apiGroups: ["storage.k8s.io"]
     resources: ["storageclasses"]
     verbs: ["get", "list", "watch"]

clusterRolebinding:
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: weave-scope
  # Annotations to add to the clusterrolebinding
  annotations:
     cloud.weave.works/launcher-info: |-
          {
            "original-request": {
              "url": "/k8s/scope.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxMiIsIEdpdFZlcnNpb246InYxLjEyLjIiLCBHaXRDb21taXQ6IjE3Yzc3Yzc4OTgyMTgwNzNmMTRjOGQ1NzM1ODJlOGQyMzEzZGM3NDAiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE4LTEwLTI0VDA2OjU0OjU5WiIsIEdvVmVyc2lvbjoiZ28xLjEwLjQiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjEwIiwgR2l0VmVyc2lvbjoidjEuMTAuNiIsIEdpdENvbW1pdDoiYTIxZmRiZDc4ZGRlOGY1NDQ3ZjVmNmMzMzFmN2ViNmY4MGJkNjg0ZSIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMTgtMDctMjZUMTA6MDQ6MDhaIiwgR29WZXJzaW9uOiJnbzEuOS4zIiwgQ29tcGlsZXI6ImdjIiwgUGxhdGZvcm06ImxpbnV4L2FtZDY0In0K",
              "date": "Tue Nov 06 2018 03:59:13 GMT+0000 (UTC)"
            },
            "email-address": "support@weave.works"
          }

  #Values defined by this API group are "User", "Group", and "ServiceAccount" only.

  #kind: User
  #userName: test-user

  #kind: Group
  #groupName: test-group

  kind: ServiceAccount
  serviceAccountName: weave-scope


###############Pod Autoscaling Values################
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80



############PRE-INSTALL AND POST-INSTALL JOBS##############


preInstallConfigmap:
  create: false
  name: test-pre-install-script
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
  setImmutable: false


preInstallJob:
  create: false
  name: test-pre-install-job
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    #"helm.sh/hook-weight": "-4"

postInstallConfigmap:
  create: false
  name: test-post-install-script
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
  setImmutable: false

postInstallJob:
  create: false
  name: test-post-install-job
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    "helm.sh/hook-weight": "2"



#####THE BELOW BLOCKS ARE FOR SERVICE.YAML FILES#####
#Add the extra service ports from here or uncomment##

service:
  type: LoadBalancer
  annotations:
    cloud.weave.works/launcher-info: |-
          {
            "original-request": {
              "url": "/k8s/scope.yaml?k8s-version=Q2xpZW50IFZlcnNpb246IHZlcnNpb24uSW5mb3tNYWpvcjoiMSIsIE1pbm9yOiIxMiIsIEdpdFZlcnNpb246InYxLjEyLjIiLCBHaXRDb21taXQ6IjE3Yzc3Yzc4OTgyMTgwNzNmMTRjOGQ1NzM1ODJlOGQyMzEzZGM3NDAiLCBHaXRUcmVlU3RhdGU6ImNsZWFuIiwgQnVpbGREYXRlOiIyMDE4LTEwLTI0VDA2OjU0OjU5WiIsIEdvVmVyc2lvbjoiZ28xLjEwLjQiLCBDb21waWxlcjoiZ2MiLCBQbGF0Zm9ybToibGludXgvYW1kNjQifQpTZXJ2ZXIgVmVyc2lvbjogdmVyc2lvbi5JbmZve01ham9yOiIxIiwgTWlub3I6IjEwIiwgR2l0VmVyc2lvbjoidjEuMTAuNiIsIEdpdENvbW1pdDoiYTIxZmRiZDc4ZGRlOGY1NDQ3ZjVmNmMzMzFmN2ViNmY4MGJkNjg0ZSIsIEdpdFRyZWVTdGF0ZToiY2xlYW4iLCBCdWlsZERhdGU6IjIwMTgtMDctMjZUMTA6MDQ6MDhaIiwgR29WZXJzaW9uOiJnbzEuOS4zIiwgQ29tcGlsZXI6ImdjIiwgUGxhdGZvcm06ImxpbnV4L2FtZDY0In0K",
              "date": "Tue Nov 06 2018 03:59:13 GMT+0000 (UTC)"
            },
            "email-address": "support@weave.works"
          }

servicePorts:
  - port: 80
    targetPort: 4040
    protocol: TCP
    name: app


###########Ingress Values##############

ingress:
  # -- Enable Ingress
  enabled: false
  servicePort: 8081
  # -- Ingress accepted path
  path: "{{- .Values.UriPrefix }}"
  #example path: /jenkinscore
  # -- Ingress accepted hostnames
  hosts: []
    #- "{{- Values.global.ingress.host }}"
  # -- Ingress extra paths to prepend to every host configuration. Useful when configuring [custom actions with AWS ALB Ingress Controller](https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/ingress/annotation/#actions).
  extraPaths: []
  # - path: /*
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation

  # -- Ingress annotations
  annotations:
    nginx.ingress.kubernetes.io/auth-signin: https://{{- .Values.global.ingress.host }}/oauth2/start?rd=$escaped_request_uri
    nginx.ingress.kubernetes.io/auth-url: https://newarchst.gvsmb.com/oauth2/auth
    nginx.ingress.kubernetes.io/proxy-body-size: 1000m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
#    kubernetes.io/ingress.class: nginx
  #  kubernetes.io/tls-acme: "true"
    #cert-manager.io/cluster-issuer: letsencrypt

  # -- (list) Ingress TLS configuration
  tls: []
    # Secrets must be manually created in the namespace.
    #- secretName: "newhost-ssl-cert"
    #  hosts:
    #    - "newhost-ssl-cert"

  # -- (string) Set ingressClassName
  ingressClassName:


namespace:
 enabled: true
 name: weave
 annotations:
   cloud.weave.works/version: unknown



env:
 enabled: true
 name: KUBERNETES_NODENAME
 fieldPath: spec.nodeName


