def label = "mypod-${UUID.randomUUID().toString()}"
def serviceaccount = "jenkins-admin"
podTemplate(label: label, serviceAccount: serviceaccount,
           containers: [containerTemplate(name: 'python', image: 'devnetops.azurecr.io/python3_devnetops:27072020', ttyEnabled: true, command: 'cat'),
						containerTemplate(name: 'ansible', image: 'devnetops.azurecr.io/devnetops-ansible:latest', ttyEnabled: true, command: 'cat')],
		   imagePullSecrets: ['devnetops'])

{
    node(label){
		def TOKEN="11d2cc12486764cb4e2862d2388b70a826"
		try{
			stage('CHECKOUT SOURCE CODE'){
				last_stage = STAGE_NAME.toLowerCase()
				git branch: "AwsstackPipeline",
				url: "https://innersource.accenture.com/scm/dnp/devnetops.git",
				credentialsId: innersource_cred
				sh "curl -X PUT ${status_url} -H 'Auth-Token: ${TOKEN}' -H 'Content-Type: application/json' -d '{\"deployment_id\":\"${deployment_id}\", \"status\":\"DELETE_IN_PROGRESS\", \"message\":\"Deployment delete initiated\"}'"
			}
			stage('DELETE BRANCH IN CLOUD'){
				last_stage = STAGE_NAME.toLowerCase()
				container('python'){
					sh 'python3 deleteStack.py'
				}
				sh "curl -X PUT ${status_url} -H 'Auth-Token: ${TOKEN}' -H 'Content-Type: application/json' -d '{\"deployment_id\":\"${deployment_id}\", \"status\":\"DELETE_COMPLETE\", \"message\":\"Stacks deleted in cloud\"}'"
			}
		/*	if (type == 'cloudformation_versa'){
		        stage('DELETE BRANCH IN DIRECTOR'){
				    last_stage = STAGE_NAME.toLowerCase()
				    sh "curl -u Administrator:Versa@123 --insecure -X DELETE  'https://35.160.43.204:9182/vnms/sdwan/workflow/devices/${BranchNames}'"
				    sh "curl -X PUT ${status_url} -H 'Auth-Token: ${TOKEN}' -H 'Content-Type: application/json' -d '{\"deployment_id\":\"${deployment_id}\", \"status\":\"DELETE_COMPLETE\", \"message\":\"Entry removed from Director\"}'"
			    }
			}
	*/	}catch (e) {
			def check = fileExists 'fail_msg'
			msg = ''
			if (check){
			    msg = readFile(file: 'fail_msg')
			}
			sh "curl -X PUT ${status_url} -H 'Auth-Token: ${TOKEN}' -H 'Content-Type: application/json' -d '{\"deployment_id\":\"${deployment_id}\", \"status\":\"DELETE_FAILED\", \"message\":\"Failed to ${last_stage}. ${msg}\"}'"
			currentBuild.result = 'FAILURE'
		}
	}
}
